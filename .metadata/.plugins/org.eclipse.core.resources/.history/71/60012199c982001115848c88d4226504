import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.StringTokenizer;

public class NaiveBayes {

	public static void main(String args[])throws Exception{
		File f1=new File("training.txt");
		File f2=new File("testdata.txt");
		File f3=new File("stopwords.txt");
		
		ArrayList<String> stopwords = new ArrayList<String>();
		ArrayList<String> uniqueWords=new ArrayList<String>();
		
		HashMap<String,Integer> h1=new HashMap<String,Integer>();//positive
		HashMap<String,Integer> h2=new HashMap<String,Integer>();//negative
		
		FileInputStream fis1=new FileInputStream(f1);
		FileInputStream fis2=new FileInputStream(f3);
		
		BufferedReader br=new BufferedReader(new InputStreamReader(fis1));
		BufferedReader br1=new BufferedReader(new InputStreamReader(fis1));
	    BufferedReader br2=new BufferedReader(new InputStreamReader(fis2));
	    String g=br2.readLine();
		while(g!=null){
			
			stopwords.add(g);
			g=br2.readLine();
			
		}
		//stopwords.add(g);
		fis2.close();
		
		String u=br.readLine();
		while(u!=null){
			StringTokenizer st1=new StringTokenizer(u);
			while(st1.hasMoreTokens()){
				String r=st1.nextToken();
				if(!uniqueWords.contains(r))
					uniqueWords.add(r);
			}
			u=br.readLine();
		}
		fis1.close();
	/*	for(String s: stopwords){
			System.out.println(s);
		}
		for(String h:uniqueWords){
			System.out.println(h);
		}*/
		fis1=new FileInputStream(f1);
		br1=new BufferedReader(new InputStreamReader(fis1));
		String j=br1.readLine();
		while(j!=null){
			
			StringTokenizer st=new StringTokenizer(j);
			
			int category=Integer.parseInt(st.nextToken());
			System.out.print("category:"+category);
			while(st.hasMoreTokens()){
				String temp=st.nextToken();
				if(category==1){
				if(h1.containsKey(temp)){
					int count=h1.get(temp);
					h1.put(temp, count+1);
				}else{
					h1.put(temp, 1);
				 }
				}else if(category==0){
				if(h2.containsKey(temp)){
					int count=h2.get(temp);
					h2.put(temp, count+1);
				}else{
					h2.put(temp, 1);
				}
				}
				//temp=st.nextToken();
			}
			j=br1.readLine();
		}
		
		System.out.println(h1.entrySet());
		System.out.println();
		System.out.println(h2.entrySet());
	}
	
}
